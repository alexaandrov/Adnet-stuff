-- MySQL Script generated by MySQL Workbench
-- 03/15/16 16:47:52
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema adnetdb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema adnetdb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `adnetdb` DEFAULT CHARACTER SET utf8 ;
USE `adnetdb` ;

-- -----------------------------------------------------
-- Table `adnetdb`.`country`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `adnetdb`.`country` (
  `id` SMALLINT(6) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL,
  `code` VARCHAR(2) NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `adnetdb`.`support_lang_dict`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `adnetdb`.`support_lang_dict` (
  `id` SMALLINT(6) NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `adnetdb`.`targeting_dict`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `adnetdb`.`targeting_dict` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `adnetdb`.`payment_freq_dict`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `adnetdb`.`payment_freq_dict` (
  `id` SMALLINT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `adnetdb`.`payment_sys_dict`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `adnetdb`.`payment_sys_dict` (
  `id` SMALLINT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `adnetdb`.`adnet`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `adnetdb`.`adnet` (
  `id` MEDIUMINT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(60) NOT NULL,
  `email` VARCHAR(70) NULL,
  `logo` VARCHAR(255) NULL,
  `short_desc` TEXT NOT NULL,
  `long_desc` TEXT NULL,
  `country_id` SMALLINT(6) NOT NULL,
  `min_payment` MEDIUMINT NULL DEFAULT '50',
  `reg_link` VARCHAR(255) NULL,
  `raiting` FLOAT NULL,
  PRIMARY KEY (`id`),
  INDEX `fk_adnet_Country1_idx` (`country_id` ASC),
  CONSTRAINT `fk_adnet_Country1`
    FOREIGN KEY (`country_id`)
    REFERENCES `adnetdb`.`country` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `adnetdb`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `adnetdb`.`user` (
  `id` INT NOT NULL AUTO_INCREMENT,
  `username` VARCHAR(100) NOT NULL,
  `auth_key` VARCHAR(32) NOT NULL,
  `displayname` VARCHAR(50) NOT NULL,
  `password_hash` VARCHAR(255) NOT NULL,
  `password_reset_token` VARCHAR(255) NULL,
  `email` VARCHAR(255) NOT NULL,
  `role` SMALLINT(6) NOT NULL DEFAULT '10',
  `status` SMALLINT(6) NOT NULL DEFAULT '10',
  `created_at` INT(11) NOT NULL,
  `updated_at` INT(11) NOT NULL,
  PRIMARY KEY (`id`));


-- -----------------------------------------------------
-- Table `adnetdb`.`ad_type_dict`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `adnetdb`.`ad_type_dict` (
  `id` TINYINT NOT NULL AUTO_INCREMENT,
  `name` VARCHAR(35) NOT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `adnetdb`.`ad_type_rel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `adnetdb`.`ad_type_rel` (
  `adnet_id` MEDIUMINT NOT NULL,
  `ad_type_id` TINYINT NOT NULL,
  PRIMARY KEY (`adnet_id`, `ad_type_id`),
  INDEX `fk_Advertising_has_AdvertisingType_AdvertisingType1_idx` (`ad_type_id` ASC),
  INDEX `fk_Advertising_has_AdvertisingType_Advertising1_idx` (`adnet_id` ASC),
  CONSTRAINT `fk_Advertising_has_AdvertisingType_Advertising1`
    FOREIGN KEY (`adnet_id`)
    REFERENCES `adnetdb`.`adnet` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Advertising_has_AdvertisingType_AdvertisingType1`
    FOREIGN KEY (`ad_type_id`)
    REFERENCES `adnetdb`.`ad_type_dict` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `adnetdb`.`news`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `adnetdb`.`news` (
  `news_id` SMALLINT NOT NULL,
  `user_id` INT NOT NULL,
  `title` TINYTEXT NOT NULL,
  `text` MEDIUMTEXT NOT NULL,
  `created_at` INT(11) NULL,
  `updated_at` INT(11) NULL,
  PRIMARY KEY (`news_id`),
  INDEX `fk_News_user1_idx` (`user_id` ASC),
  CONSTRAINT `fk_News_user1`
    FOREIGN KEY (`user_id`)
    REFERENCES `adnetdb`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `adnetdb`.`support_lang_rel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `adnetdb`.`support_lang_rel` (
  `adnet_id` MEDIUMINT NOT NULL,
  `support_lang_id` SMALLINT(6) NOT NULL,
  PRIMARY KEY (`adnet_id`, `support_lang_id`),
  INDEX `fk_adnet_has_support_lang_dict_support_lang_dict1_idx` (`support_lang_id` ASC),
  INDEX `fk_adnet_has_support_lang_dict_adnet1_idx` (`adnet_id` ASC),
  CONSTRAINT `fk_adnet_has_support_lang_dict_adnet1`
    FOREIGN KEY (`adnet_id`)
    REFERENCES `adnetdb`.`adnet` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_adnet_has_support_lang_dict_support_lang_dict1`
    FOREIGN KEY (`support_lang_id`)
    REFERENCES `adnetdb`.`support_lang_dict` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `adnetdb`.`payment_sys_rel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `adnetdb`.`payment_sys_rel` (
  `adnet_id` MEDIUMINT NOT NULL,
  `payment_sys_id` SMALLINT NOT NULL,
  PRIMARY KEY (`adnet_id`, `payment_sys_id`),
  INDEX `fk_adnet_has_payment_system_dict_payment_system_dict1_idx` (`payment_sys_id` ASC),
  INDEX `fk_adnet_has_payment_system_dict_adnet1_idx` (`adnet_id` ASC),
  CONSTRAINT `fk_adnet_has_payment_system_dict_adnet1`
    FOREIGN KEY (`adnet_id`)
    REFERENCES `adnetdb`.`adnet` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_adnet_has_payment_system_dict_payment_system_dict1`
    FOREIGN KEY (`payment_sys_id`)
    REFERENCES `adnetdb`.`payment_sys_dict` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `adnetdb`.`payment_freq_rel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `adnetdb`.`payment_freq_rel` (
  `adnet_id` MEDIUMINT NOT NULL,
  `payment_freq_id` SMALLINT NOT NULL,
  PRIMARY KEY (`adnet_id`, `payment_freq_id`),
  INDEX `fk_adnet_has_payment_freq_dict_payment_freq_dict1_idx` (`payment_freq_id` ASC),
  INDEX `fk_adnet_has_payment_freq_dict_adnet1_idx` (`adnet_id` ASC),
  CONSTRAINT `fk_adnet_has_payment_freq_dict_adnet1`
    FOREIGN KEY (`adnet_id`)
    REFERENCES `adnetdb`.`adnet` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_adnet_has_payment_freq_dict_payment_freq_dict1`
    FOREIGN KEY (`payment_freq_id`)
    REFERENCES `adnetdb`.`payment_freq_dict` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `adnetdb`.`targeting_rel`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `adnetdb`.`targeting_rel` (
  `adnet_id` MEDIUMINT NOT NULL,
  `targeting_id` INT NOT NULL,
  PRIMARY KEY (`adnet_id`, `targeting_id`),
  INDEX `fk_Targeting_has_adnet_adnet1_idx` (`adnet_id` ASC),
  INDEX `fk_Targeting_has_adnet_Targeting1_idx` (`targeting_id` ASC),
  CONSTRAINT `fk_Targeting_has_adnet_Targeting1`
    FOREIGN KEY (`targeting_id`)
    REFERENCES `adnetdb`.`targeting_dict` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Targeting_has_adnet_adnet1`
    FOREIGN KEY (`adnet_id`)
    REFERENCES `adnetdb`.`adnet` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `adnetdb` ;

-- -----------------------------------------------------
--  routine1
-- -----------------------------------------------------

DELIMITER $$
USE `adnetdb`$$
$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;


/**
 * Database schema required by \yii\rbac\DbManager.
 *
 * @author Qiang Xue <qiang.xue@gmail.com>
 * @author Alexander Kochetov <creocoder@gmail.com>
 * @link http://www.yiiframework.com/
 * @copyright 2008 Yii Software LLC
 * @license http://www.yiiframework.com/license/
 * @since 2.0
 */

drop table if exists `auth_assignment`;
drop table if exists `auth_item_child`;
drop table if exists `auth_item`;
drop table if exists `auth_rule`;

create table `auth_rule`
(
   `name`                 varchar(64) not null,
   `data`                 text,
   `created_at`           integer,
   `updated_at`           integer,
    primary key (`name`)
) engine InnoDB;

create table `auth_item`
(
   `name`                 varchar(64) not null,
   `type`                 integer not null,
   `description`          text,
   `rule_name`            varchar(64),
   `data`                 text,
   `created_at`           integer,
   `updated_at`           integer,
   primary key (`name`),
   foreign key (`rule_name`) references `auth_rule` (`name`) on delete set null on update cascade,
   key `type` (`type`)
) engine InnoDB;

create table `auth_item_child`
(
   `parent`               varchar(64) not null,
   `child`                varchar(64) not null,
   primary key (`parent`, `child`),
   foreign key (`parent`) references `auth_item` (`name`) on delete cascade on update cascade,
   foreign key (`child`) references `auth_item` (`name`) on delete cascade on update cascade
) engine InnoDB;

create table `auth_assignment`
(
   `item_name`            varchar(64) not null,
   `user_id`              varchar(64) not null,
   `created_at`           integer,
   primary key (`item_name`, `user_id`),
   foreign key (`item_name`) references `auth_item` (`name`) on delete cascade on update cascade
) engine InnoDB;

USE `adnetdb` ;

-- -----------------------------------------------------
--  routine1
-- -----------------------------------------------------

DELIMITER $$
USE `adnetdb`$$
$$

DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
